# GHW workflow to build metislinux iso 
name: build hyprland iso per release
on:
  push:
  schedule: [cron: '30 5 * * *']

env:
  api_key: ${{ secrets.GITHUB_TOKEN }}
  name: ${{ github.event.repository.name }}
  release_name: ${{ github.ref_name }}
jobs:

  build_minimum:
    runs-on: ubuntu-latest

    container:
      image: archlinux:latest
      options: --privileged

      
    steps:
      # - name: Cloning the repository! please wait...
      - uses: actions/checkout@v3

      - name: Installing archiso
        run: |
            echo "[mydb]" >> /etc/pacman.conf
            echo "SigLevel = Optional TrustAll" >> /etc/pacman.conf
            echo "Server = file:///__w/hyprland_arch/hyprland_arch/baseline/local/repo" >> /etc/pacman.conf

            pacman -Syyuu unzip zip archiso --noconfirm
        
      - name: Creating a nobody user with access to pacman with no pass
        run: |
          echo "nobody ALL = NOPASSWD: /usr/bin/pacman" >> /etc/sudoers
          echo "root ALL=(ALL:ALL) ALL" >> /etc/sudoers
          usermod -aG wheel nobody

      - name: Installing dependency needed for makepkg
        run: pacman -S --noconfirm  git base-devel  sudo fakeroot
      

      - name: Cloning the  yay
        run: |
          # git clone https://aur.archlinux.org/google-chrome.git
          git clone https://aur.archlinux.org/yay.git


      - name: Adding permission to directory for nobody user 
        run:  |  
          # chmod ugo+rwx google-chrome
          chmod ugo+rwx yay
          mkdir /.cache
          chmod ugo+rwx -R /.cache


      # - name: Building chrome with makepkg
      #   run: |
      #       cd google-chrome
      #       sudo -u nobody makepkg -s --noconfirm

      # - name: Building yay with makepkg
      #   run: |
      #       cd yay
      #       # export GOFLAGS=-buildvcs=false
      #       sudo -u nobody makepkg -s  --noconfirm

      # - name: Copying  yay into offline_package
      #   run: |
      #       # cp google-chrome/google-chrome*.tar.zst baseline/airootfs/root/offline_packages
      #       cp yay/yay*.tar.zst baseline/airootfs/root/offline_packages
   
      - name: getting all packages fully offline
        run: |
              # rm /var/cache/pacman/pkg/*
            
              mkdir tiger
              pacstrap tiger --noconfirm  $(cat baseline/airootfs/root/packages)||pacstrap tiger --noconfirm  $(cat baseline/airootfs/root/packages)||pacstrap tiger --noconfirm  $(cat baseline/airootfs/root/packages)||pacstrap tiger --noconfirm  $(cat baseline/airootfs/root/packages)
              cp tiger/var/cache/pacman/pkg/*.tar.zst baseline/airootfs/root/offline_packages

      # - name: adding mirrors mirrors
      #   run: cat releng/local/mirrorlist > /etc/pacman.d/mirrorlist

      - name: Building  image may takes up to 25 minutes..
        run: |
          
          cp baseline/airootfs/root/mkarchiso /usr/bin/
          chmod +x /usr/bin/mkarchiso
          
          mkdir iso
          mkarchiso -vw iso -o iso baseline
          echo "NOW=$(date +'%Y%m%d')" >> $GITHUB_ENV
          echo "File=$(date +'%Y.%m.%d')" >> $GITHUB_ENV
          echo "TAG=$(date +'%Y%h%d-%H%M')" >> $GITHUB_ENV

      - name: Uploading image to releases
        uses: svenstaro/upload-release-action@v2

        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./iso/archlinux-baseline-${{env.File}}-x86_64.iso
          asset_name: archlinux-baseline-${{env.File}}-x86_64.iso
          tag: ArchLinux-${{ env.NOW}}
          overwrite: true 
          body: This is the release of arch linux iso on ${{env.File}}

